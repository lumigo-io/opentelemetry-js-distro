name: Tracer Testing
on: [push]
jobs:

  build-package:
    name: Build Lumigo OpenTelemetry for JS distro
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          architecture: x64
      - run: sudo apt-get update && sudo apt-get install build-essential libsdl-pango-dev libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev || true # Node.js 18 does not carry pango
      - run: npm ci
      - run: npm run build
      - name: Upload distro as artifact
        uses: actions/upload-artifact@v3
        with:
          name: distro-package
          path: distro.tgz
          retention-days: 5

  supported-node-versions-testing:
    name: Node ${{ matrix.node_cimg_tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_cimg_tag: [ 14, 16, 18, 20 ]
    steps:
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_cimg_tag }}
          architecture: x64
      - name: Download distro
        uses: actions/download-artifact@v3
        with:
          name: distro-package
      - run: npm i ./distro.tgz
      - run: npm run test:unit
      - run: npm run test:component
      - run: npm run test:integration:version

  unsupported-node-versions-testing:
    name: Node ${{ matrix.node_cimg_tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_cimg_tag: [ 10, 12 ]
    steps:
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_cimg_tag }}
          architecture: x64
      - name: Download distro
        uses: actions/download-artifact@v3
        with:
          name: distro-package
      - run: npm i ./distro.tgz
      - run: |
          output=$(node -e "require('@lumigo/opentelemetry')")

          if [ "${output}" != "@lumigo/opentelemetry: Node.js version '$(node --version)' is not supported*" ]; then
            echo "Unexpected output: ${output}"
            exit 1
          fi
